{
    "index_file_content": "import express from 'express'\nimport cors from 'cors'\n\nconst app = express()\n\napp.use(cors())\napp.use(express.json())\n\n// Add your additional code here",

    "app_file_content": "",

    "env_file_content" : "MONGO_URI=YOUR_MONOGO_URI\nPORT=PORT_NUMBER\nACCESS_TOKEN_SECRET=YOUR_AC_SECRET\nACCESS_TOKEN_)EXPIRY=1d\nREFRESH_TOKEN_SECRET=YOUR_RF_SECRET\nREFRESH_TOKEN_EXPIRY=10d\nCLOUDINARY_CLOUD_NAME=YOUR_CLOUD_NAME\nCLOUDINARY_API_SECRET=YOUR_API_SECRET",

    "apiResponse_file_content" : "class ApiResponse {\n\tconstructor(statusCode, data, message = 'success') {\n\t\tthis.statusCode = statusCode\n\t\tthis.data = data\n\t\tthis.message = message\n\t\tthis.success = statusCode < 400\n\t}\n}\nexport {ApiResponse}",

    "db_file_content" : "import mongoose from 'mongoose';\n\nconst connectToMongoDB = async (mongoURI) => {\n    try {\n        await mongoose.connect(mongoURI);\n        console.log('Successfully connected to MongoDB!');\n    } catch (error) {\n        console.error(`Error connecting to MongoDB: ${error.message}`);\n    }\n};\n\nexport default connectToMongoDB;",

    "user_model_content" : "const mongoose = require('mongoose');\n\nconst userSchema = new mongoose.Schema({\n  fullName: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    lowercase: true,\n    index: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    lowercase: true,\n    index: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  coverImage: {\n    type: String,\n    default: 'default_cover.jpg'\n  },\n  avatar: {\n    type: String,\n    required: true\n  },\n  phoneNumber: {\n    type: String,\n    trim: true\n  },\n  bio: {\n    type: String,\n    maxlength: 500\n  },\n  role: {\n    type: String,\n    enum: ['user', 'admin'],\n    default: 'user'\n  },\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  address: {\n    street: {\n      type: String,\n      trim: true\n    },\n    city: {\n      type: String,\n      trim: true\n    },\n    state: {\n      type: String,\n      trim: true\n    },\n    country: {\n      type: String,\n      trim: true\n    },\n    zipCode: {\n      type: String,\n      trim: true\n    }\n  },\n  socialProfiles: {\n    facebook: {\n      type: String,\n      trim: true\n    },\n    twitter: {\n      type: String,\n      trim: true\n    },\n    linkedIn: {\n      type: String,\n      trim: true\n    },\n    instagram: {\n      type: String,\n      trim: true\n    }\n  },\n  posts: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Post'\n  }]\n}, {\n  timestamps: true\n});\n\nconst User = mongoose.model('User', userSchema);\n\nmodule.exports = User;",

    "post_model_content" : "const mongoose = require('mongoose');\n\nconst postSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  content: {\n    type: String,\n    required: true\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  createdBy: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  }\n});\n\nconst Post = mongoose.model('Post', postSchema);\n\nmodule.exports = Post;"
}
